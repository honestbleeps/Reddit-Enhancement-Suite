{
	"root": true,
	"parser": "@babel/eslint-parser",
	"plugins": [
		"flowtype",
		"ava",
		"dollar-sign",
		"no-useless-assign",
		"prefer-spread",
		"filenames",
		"import"
	],
	"settings": {
		"import/ignore": [
			"node_modules",
			"\\.(json|png|gif|html|scss)$"
		]
	},
	"env": {
		"browser": true,
		"node": true,
		"es6": true
	},
	"extends": ["eslint:all", "plugin:ava/recommended", "plugin:you-dont-need-lodash-underscore/all"],
	"rules": {
		"ava/no-ignored-test-files": 0,

		"flowtype/boolean-style": 2,
		"flowtype/define-flow-type": 2,
		"flowtype/delimiter-dangle": [2, "always-multiline"],
		"flowtype/generic-spacing": 2,
		"flowtype/no-primitive-constructor-types": 2,
		"flowtype/no-types-missing-file-annotation": 2,
		"flowtype/no-unused-expressions": 2,
		"flowtype/no-weak-types": [2, { "any": false }],
		"flowtype/require-valid-file-annotation": [2, "always"],
		"flowtype/space-after-type-colon": 2,
		"flowtype/space-before-generic-bracket": 2,
		"flowtype/space-before-type-colon": 2,
		"flowtype/type-id-match": [2, "^([A-Z][a-z0-9]+)+$"],
		"flowtype/type-import-style": [2, "declaration"],
		"flowtype/union-intersection-spacing": 2,
		"flowtype/valid-syntax": 2,

		"you-dont-need-lodash-underscore/throttle": 0,

		"dollar-sign/dollar-sign": [2, "ignoreProperties"],

		"no-useless-assign/no-useless-assign": 2,

		"prefer-spread/prefer-object-spread": 2,

		"function-call-argument-newline": 0,

		"filenames/match-exported": 2,

		"import/no-restricted-paths": [2, { "zones": [
			{ "target": "./lib/core", "from": "./lib/modules" },
			{ "target": "./lib/environment", "from": "./lib/modules" },
			{ "target": "./lib/environment", "from": "./lib/core" },
			{ "target": "./lib/utils", "from": "./lib/modules" },
			{ "target": "./lib/utils", "from": "./lib/core" },
			{ "target": "./lib/vendor", "from": "./lib/modules" },
			{ "target": "./lib/vendor", "from": "./lib/core" }
		] }],
		"import/default": 2,
		"import/dynamic-import-chunkname": 2,
		"import/exports-last": 0,
		"import/extensions": [0, { "js": "always", "json": "always" }], // FIXME Extensions must be added
		"import/first": 2,
		"import/group-exports": 0,
		"import/imports-first": 2,
		"import/max-dependencies": 0,
		"import/newline-after-import": 2,
		"import/no-absolute-path": 2,
		"import/no-amd": 2,
		"import/no-anonymous-default-export": 0,
		"import/no-commonjs": 2,
		"import/no-cycle": 0,
		"import/no-default-export": 0,
		"import/no-deprecated": 2,
		"import/no-duplicates": 2,
		"import/no-dynamic-require": 0,
		"import/no-extraneous-dependencies": 2,
		"import/no-internal-modules": 0,
		"import/no-mutable-exports": 0,
		"import/no-named-as-default": 2,
		"import/no-named-as-default-member": 2,
		"import/no-named-default": 2,
		"import/no-namespace": 0,
		"import/no-nodejs-modules": 2,
		"import/no-self-import": 2,
		"import/no-unassigned-import": 0,
		"import/no-unresolved": [2, { "ignore": ["ava"] }],
		"import/no-useless-path-segments": 0,
		"import/no-webpack-loader-syntax": 0,
		"import/order": 2,
		"import/prefer-default-export": 0,
		"import/unambiguous": 0,

		"no-alert": 0,
		"no-bitwise": 0,
		"no-case-declarations": 0,
		"no-confusing-arrow": 0,
		"no-console": 0,
		"no-continue": 0,
		"no-div-regex": 0,
		"no-duplicate-imports": 0, // see import/no-duplicates (ESLint's rule doesn't handle Flow `import type`)
		"no-else-return": 0,
		"no-empty-function": [2, { "allow": ["arrowFunctions", "methods"] }],
		"no-extra-parens": [2, "functions"], // "all" conflicts with no-return-assign and some other rules, unfortunately
		"no-implicit-coercion": [0, { "boolean": false }],
		"no-inline-comments": 0,
		"no-inner-declarations": 0, // ES6 has block-scoped functions
		"no-invalid-this": 0,
		"no-lone-blocks": 0,
		"no-lonely-if": 0,
		"no-loop-func": 0,
		"no-magic-numbers": 0,
		"no-mixed-operators": 0,
		"no-multi-assign": 0,
		"no-multi-spaces": [2, { "exceptions": { "SwitchCase": true } }],
		"no-negated-condition": 0,
		"no-nested-ternary": 0,
		"no-param-reassign": 0,
		"no-plusplus": 0,
		"no-process-env": 0,
		"no-process-exit": 0,
		"no-prototype-builtins": 0,
		"no-restricted-globals": [2, "alert"],
		"no-restricted-modules": 0, // see import/no-nodejs-modules
		"no-restricted-syntax": [2, {
			"selector": "ForStatement",
			"message": "No C-style for-loops; use for..of or Array.prototype methods."
		}, {
			"selector": "AssignmentExpression[left.property.name='options'] > ObjectExpression > Property > Literal.key[value=/ /]",
			"message": "No spaces in option names."
		}, {
			"selector": "Property[key.name='options'] > ObjectExpression > Property > Literal.key[value=/ /]",
			"message": "No spaces in option names."
		}, {
			"selector": "ForInStatement",
			"message": "No for-in loops; use for..of with Object.keys/values/entries."
		}, {
			"selector": "BinaryExpression[operator='in']",
			"message": "No in keyword; use Set/Map or hasOwnProperty."
		}],
		"no-shadow": 0,
		"no-sync": 0,
		"no-tabs": 0,
		"no-ternary": 0,
		"no-undef": [2, { "typeof": true }],
		"no-undefined": 0,
		"no-underscore-dangle": 0,
		"no-unused-expressions": 2,
		"no-unused-vars": [2, { "ignoreRestSiblings": true }],
		"no-use-before-define": [0, "nofunc"],
		"no-useless-escape": 0,
		"no-warning-comments": 0,
		"array-bracket-newline": [2, "consistent"],
		"array-callback-return": 0,
		"array-element-newline": [0, { "multiline": true }],
		"arrow-parens": [2, "as-needed"],
		"brace-style": [2, "1tbs", { "allowSingleLine": true }],
		"callback-return": 0,
		"camelcase": [2, { "properties": "never" }],
		"capitalized-comments": 0,
		"class-methods-use-this": 0,
		"comma-dangle": [2, "always-multiline"],
		"complexity": [0, 11],
		"consistent-return": 0, // Flow effectively does this, and does a better job
		"consistent-this": [2, "this"], // do not alias `this`, use arrow functions
		"curly": [2, "multi-line"],
		"default-param-last": 0,
		"dot-location": [2, "property"],
		"func-names": 0, // all anonymous functions should be arrows (when this is turned on)
		"func-style": [2, "declaration", { "allowArrowFunctions": true }],
		"function-paren-newline": [0, "consistent"],
		"generator-star-spacing": [0, { "before": false, "after": true }], // disabled pending https://github.com/eslint/eslint/issues/6195
		"id-blacklist": 0,
		"id-length": 0,
		"id-match": 0,
		"implicit-arrow-linebreak": 0,
		"indent": [2, "tab", { "SwitchCase": 1, "flatTernaryExpressions": true }],
		"init-declarations": 0,
		"linebreak-style": 0,
		"line-comment-position": 0,
		"lines-around-comment": [0, { "allowBlockStart": true }],
		"lines-between-class-members": [2, "always", { "exceptAfterSingleLine": true }],
		"logical-assignment-operators": 0, // not support in used flowtype
		"max-classes-per-file": 0,
		"max-depth": 0,
		"max-len": 0,
		"max-lines": 0,
		"max-lines-per-function": 0,
		"max-nested-callbacks": [2, 5],
		"max-params": 0,
		"max-statements": 0,
		"max-statements-per-line": 0,
		"multiline-comment-style": 0,
		"multiline-ternary": 0,
		"newline-after-var": [0, "never"],
		"newline-before-return": 0,
		"newline-per-chained-call": 0,
		"object-curly-newline": 0,
		"object-curly-spacing": [2, "always"],
		"object-property-newline": [2, { "allowMultiplePropertiesPerLine": true }],
		"one-var": [2, { "initialized": "never" }],
		"one-var-declaration-per-line": [2, "initializations"],
		"operator-assignment": [2, "always"],
		"operator-linebreak": [2, "after"],
		"padded-blocks": [2, "never"],
		"prefer-named-capture-group": 0,
		"prefer-destructuring": 0,
		"prefer-object-spread": 2,
		"prefer-reflect": [2, { "exceptions": ["defineProperty", "getOwnPropertyDescriptor", "getPrototypeOf", "setPrototypeOf", "isExtensible", "getOwnPropertyNames", "preventExtensions", "delete"] }],
		"quote-props": [2, "as-needed"],
		"quotes": [2, "single"],
		"require-atomic-updates": 0,
		"require-jsdoc": 0,
		"require-unicode-regexp": 0,
		"sort-imports": 0, // see import/order
		"sort-keys": 0,
		"sort-vars": 0,
		"space-before-function-paren": [2, {
			"anonymous": "never",
			"named": "never",
			"asyncArrow": "always"
		}],
		"spaced-comment": [2, "always", { "markers": [":", "::"] }],
		"strict": [2, "never"], // Babel inserts it for us
		"valid-jsdoc": 0,
		"valid-typeof": [2, { "requireStringLiterals": true }],
		"vars-on-top": 0,
		"wrap-iife": [2, "inside"]
	}
}
