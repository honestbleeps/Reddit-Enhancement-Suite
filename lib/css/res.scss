@import '../vendor/index';

@import 'zindex';
@import 'modules/nightMode';
@import 'modules/version';
@import 'modules/commentStyle';
@import 'modules/showParent';
@import 'modules/quickMessage';
@import 'modules/accountSwitcher';
@import 'modules/betteReddit';
@import 'modules/commandLine';
@import 'modules/commentNavigator';
@import 'modules/commentPreview';
@import 'modules/commentTools';
@import 'modules/dashboard';
@import 'modules/menu';
@import 'modules/newCommentCount';
@import 'modules/noParticipation';
@import 'modules/notifications';
@import 'modules/filteReddit';
@import 'modules/floater';
@import 'modules/hover';
@import 'modules/keyboardNav';
@import 'modules/neverEndingReddit';
@import 'modules/orangered';
@import 'modules/pageNavigator';
@import 'modules/saveComments';
@import 'modules/searchHelper';
@import 'modules/selectedEntry';
@import 'modules/showImages';
@import 'modules/singleClick';
@import 'modules/sourceSnudown';
@import 'modules/spoilerTags';
@import 'modules/styleTweaks';
@import 'modules/submitIssue';
@import 'modules/subredditInfo';
@import 'modules/subredditManager';
@import 'modules/tableTools';
@import 'modules/temporaryDropdownLinks';
@import 'modules/troubleshooter';
@import 'modules/userbarHider';
@import 'modules/userInfo';
@import 'modules/redditUserInfo';
@import 'modules/userTagger';
@import 'modules/voteEnhancements';
@import 'modules/commentQuickCollapse';
@import 'modules/wheelBrowse';

body.res-console-open {
	overflow: hidden;
}

#RESConsoleContainer {
	visibility: hidden;
	color: #000;
	font-size: 12px;
	z-index: $zindex-console-container;
	position: fixed;
	top: 15px;
	right: 25px;
	bottom: 100%;
	left: 25px;
	overflow: hidden;
	box-shadow: 5px 5px 10px rgba(0, 0, 0, .2);
	border-radius: 3px;
	background-color: #fff;
	transition: bottom .4s;

	&.slideIn {
		visibility: visible;
		bottom: 1.5%;
	}

	&.slideOut {
		visibility: visible;
		bottom: 100%;
		padding: 0;

		#RESConfigPanelOptions {
			overflow: hidden; // try to smooth the transition
		}
	}

	em {
		font-style: italic;
	}
}

.RESDonateButton {
	display: inline-block;
	background-color: white;
	color: orangered;
	border-radius: 10px;
	padding: 10px 20px;
	border: 1px solid rgb(255, 69, 0);
}

.donateOption {
	margin-top: 25px;
	text-align: center;
	float: left;
	width: 50%;
	height: 150px;
}

.donateOption:last-child {
	margin-right: 0;
}

#modalOverlay {
	visibility: hidden;
	z-index: $zindex-console-container - 1;
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	background: rgba(0, 0, 0, 0);
	transition: background .4s, visibility .4s;

	&.fadeIn {
		visibility: visible;
		background: rgba(0, 0, 0, .5);
	}

	&.fadeOut {
		background: rgba(0, 0, 0, 0);
	}
}

#DashboardLink a {
	display: block;
	width: auto;
	height: auto;
}

.gearIcon {
	text-decoration: none !important;
	position: relative;

	&.res-gearIcon-legacy {
		display: inline-block;
		width: 15px;
		height: 15px;
		background-repeat: no-repeat;

		&::after {
			content: none;
		}
	}

	&::before,
	&::after {
		font: normal 14px/1 'Batch';
		vertical-align: middle;
	}

	&::after {
		content: '\F04D';
		color: #a0e0fd;
		text-shadow: 0 0 1px #3d6da5, 0 0 1px #3d6da5, 0 0 1px #3d6da5, 0 0 1px #3d6da5, 0 0 1px #3d6da5, 0 0 1px #3d6da5, 0 0 1px #3d6da5, 0 0 1px #3d6da5;
	}
}

#RESAnnouncementAlert {
	display: inline-block;
	vertical-align: bottom;
	margin-left: .5em;
	color: goldenrod;
	animation: fadeIn .5s ease-out 7 alternate;

	.important {
		animation: pop 1s ease-out infinite alternate;
	}
}

@keyframes pop {
	from { transform: scale(0, 0); }
	to { transform: scale(1.5, 1.5); }
}

#RESSettingsButton,
#openRESPrefs {
	display: inline-block;
}

.RESDropdownList {
	position: absolute;
	list-style-type: none;
	background-color: #5f99cf;
	width: 180px;
	border-radius: 0 0 3px 3px;
	border: 1px solid #369;
	border-bottom: none;
	margin: 0 !important;
	font-size: 10px;

	li {
		position: relative;
		cursor: pointer;
		border-bottom: 1px solid #369;
		line-height: 34px;
		font-weight: bold;
		color: #c9def2;
		padding-left: 10px;
		box-sizing: content-box;
	}

	.toggleButton {
		line-height: 14px;
		right: 5px;
		top: 9px;
		position: absolute;
	}

	a {
		display: block;

		&,
		&:link,
		&:visited {
			color: inherit;
			text-decoration: none;
		}
	}

	li:hover,
	a:hover {
		background-color: #9cc6ec;
		color: #369;
		text-decoration: none;
	}
}

.editButton {
	cursor: pointer;
	width: 24px;
	height: 22px;
}

#RESLogo {
	display: inline-block;
	margin-right: 5px;
	vertical-align: middle;
	width: 60px;
	height: 30px;
	background-image: url('../images/icon60x30.png');
}

.RESDialogTopBar {
	border-radius: 3px 3px 0 0;
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	height: 40px;
	margin-bottom: 10px;
	padding: 10px 10px 0 10px;
	border-bottom: 1px solid #c7c7c7;
	background-color: #F0F3FC;
}

#RESConsoleTopBar {
	padding-right: 30px;
	margin: 0;
	height: auto;
	position: static;

	h1 {
		display: inline-block;
		margin: 0;
		padding: 0;
		font-size: 14px;
		vertical-align: middle;
	}
}

#RESConsoleSubredditLink {
	display: inline-block;
	margin-left: 1em;
	font-size: 10px;
	vertical-align: middle;
}

#RESKnownBugs,
#RESKnownFeatureRequests {
	list-style-type: disc;
}

.RESCloseButton {
	position: absolute;
	top: 8px;
	right: 8px;
	font: 12px/22px Verdana, sans-serif;
	background-color: #fff;
	border: 1px solid #d7d9dc;
	border-radius: 3px;
	color: #9a958e;
	text-align: center;
	width: 24px;
	height: 24px;
	z-index: 1000;
	cursor: pointer;
	box-sizing: border-box;

	&:hover {
		border-color: #999;
		background-color: #ddd;
	}

	#RESConsoleTopBar & {
		top: 8px;
		right: 8px;
	}
}

#RESAllOptionsSpan {
	display: flex; // removes white space
	margin: 10px 0;
	color: #868686;
	font-size: 11px;
}

.RESDialogSmall {
	background-color: #fff;
	border: 1px solid #c7c7c7;
	border-radius: 3px;
	font-size: 12px;
	color: #666;
	position: relative;

	> h3 {
		color: #000;
		font-size: 14px;
		margin: 0 0 10px;
		font-weight: normal;
		background-color: #f0f3fc;
		border-bottom: 1px solid #c7c7c7;
		width: auto;
		position: relative;
		height: 28px;
		padding-left: 10px;
		padding-top: 12px;
	}

	.RESDialogContents {
		padding: 0 12px 12px 12px;
	}
}

div.usertext-edit {
	width: auto;
	max-width: 500px;
	padding: 0;
}

.usertext-edit .md,
.wiki-page #editform textarea {
	clear: left;
}

// Improve size calculation for textareas.
.usertext-edit textarea,
#wiki_page_content,
.wiki-page .wiki-page-content #wiki_revision_reason {
	box-sizing: border-box;
}

.usertext-edit .RESDialogSmall:not(.livePreview) .md.RESDialogContents {
	border: none;
	background-color: #fff;
}

#RESConsoleContent {
	display: flex;
	max-height: 100%;
	position: absolute;
	top: 41px;
	right: 0;
	bottom: 0;
	left: 0;
	padding-left: 15px;

	&.advanced-options-disabled .SearchRES-result-item.advanced,
	&.advanced-options-disabled .optionContainer.advanced {
		display: none;
	}

	#contributeContents {
		padding-top: 15px;

		p {
			margin-bottom: 20px;
			font-size: 14px;
		}

		h1 {
			margin-top: 40px;
		}
	}
}

#RESConfigPanelOptions {
	display: block;
	overflow: auto;
	padding: 15px 15px 0 15px;
	flex-grow: 1;

	.moduleDescription {
		margin-top: 5px;
	}

	p {
		margin-bottom: 10px;
	}

	ul {
		&.token-input-list-facebook {
			margin: 0;
		}
	}
}

#allOptionsContainer {
	position: relative;
	max-width: 1150px;
}

#moduleOptionsScrim {
	display: none;
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: 1;
	background-color: rgba(255, 255, 255, .7);

	&.visible {
		display: block;
	}
}

#RESConfigPanelModulesPane {
	position: relative;
	width: 200px;
	padding-top: 15px;
	flex-shrink: 0;
	overflow-y: auto;
	overflow-x: hidden;
}

.clear {
	clear: both;
}

#goModePanel {
	display: none;
	position: fixed;
	top: 50%;
	left: 50%;
	width: 250px;
	margin-left: -125px;
	margin-top: -140px;
	z-index: $zindex-go-mode-panel;

	table {
		width: 100%;

		td {
			padding: 4px 2px;
			border: none;

			&.arrow {
				padding: 4px 12px;
				border: none;
			}
		}
	}
}

#keyCodeModal {
	display: none;
	width: 200px;
	height: 40px;
	position: absolute;
	z-index: $zindex-console-container + 1;
	background-color: #FFF;
	padding: 4px;
	border: 2px solid #CCC;
}

#RESConfigPanelModulesList {
	color: rgb(80, 80, 80);
	margin-top: 15px;

	> ul {
		border: 1px solid rgb(230, 230, 230);
		border-radius: 2px;
	}

	ul ul {
		padding: 10px 0;
		display: none;
	}

	li h3 {
		text-align: left;
		padding: 5px 10px;
		margin: 0;
		cursor: pointer;
		border-top: 1px solid rgb(230, 230, 230);
		font-weight: normal;
	}

	li:first-child h3 {
		border: none;
	}

	li.active h3 {
		border-bottom: 1px solid rgb(230, 230, 230);
		background: rgb(245, 245, 245);
	}
}

#RESMenu li h3:hover {
	border-color: #000;
}

%warning-icon {
	content: '\F15A';
	margin-left: 3px;
	color: rgb(230, 30, 30);
	font: normal 11px 'Batch';
}

#RESAllOptionsSpan::after {
	@extend %warning-icon;
}

.optionContainer {
	position: relative;
	border: 1px solid hsl(205, 50%, 78%);
	border-radius: 2px;
	padding: 10px 20px;
	background-color: #f0f3fc;
	margin: 10px 0;
	overflow: auto;
	clear: both;
	display: flex;

	&.table,
	&.specialOptionType {
		display: block;
	}

	// for when the functionality is there
	&.depends {
		margin-top: -11px;
		border-radius: 0 0 2px 2px;
		background-color: rgb(251, 252, 255);
	}

	&.highlight {
		box-shadow: 0 0 5px 1px rgb(171, 204, 227);

		.optionTitle {
			font-weight: bold;
		}
	}

	&.advanced .optionTitle::before {
		@extend %warning-icon;
		margin: 0 4px 0 -15px; // 4+(-15) = 11 == Batch font-size
	}

	&:not(.table):not(.specialOptionType) .optionSetting {
		padding: 0 10px;
		margin-right: 10px;
		border-right: 1px dashed hsl(205, 50%, 78%);
	}

	table {
		clear: both;
		width: 100%;
		margin-top: 20px;
		margin-bottom: 10px;
	}

	.enum img {
		max-width: 16px;
	}
}

.res-icon-button {
	cursor: pointer;
	margin: 0 2px;
	opacity: .4;

	&:hover {
		opacity: 1;
	}

	&.handle { cursor: grab; }
}

.optionTitle {
	font-size: 14px;
	min-width: 200px;
	flex: 0 0 20%;
}

.optionKey {
	font-size: .75em;
	color: #999;
}

.optionSetting {
	white-space: nowrap;
	flex: 0 0 20%;
}

.optionDescription {
	line-height: 1.5;
	flex-grow: 1;
}

#RESConsoleContainer input[type=radio],
#RESConsoleContainer input[type=checkbox] {
	vertical-align: bottom;
	margin-right: 3px;
}

.moduleButton {
	font: 12px sans-serif;
	color: rgb(180, 180, 180);
	padding: 7px 10px;
	cursor: pointer;

	&.enabled {
		color: rgb(80, 80, 80);
	}

	&.active {
		font-weight: bold;
		box-shadow: inset 5px 0 0 0 rgb(171, 204, 227);
	}

	small {
		display: block;
	}
}

.toggleButton {

	position: relative;
	display: inline-flex;
	cursor: pointer;
	white-space: nowrap;

	.toggleThumb {
		cursor: pointer;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		width: 40px;
		height: 15px;
		background-color: #ccc;
		border: 2px solid #ccc;
		border-radius: 2px;
		transition: .1s;
		transition-timing-function: ease-in;
	}

	&.enabled {
		&.reverseToggleButton .toggleThumb {
			background-color: #c66;
			border-color: #c66;
		}

		.toggleThumb {
			background-color: #369;
			border-color: #369;
		}
	}

	.toggleThumb::before {
		position: absolute;
		content: '';
		height: 15px;
		width: 15px;
		left: 2px;
		border-radius: 2px;
		background-color: white;
		transition: .4s;
	}

	&.enabled .toggleThumb::before {
		transform: translateX(25px);
	}

	.toggleLabel {
		display: flex;
		flex-direction: column;
		justify-content: center;

		// Custom toggle labels
		&[data-disabled-text]::before {
			content: '\00a0' attr(data-disabled-text);
			display: block;
			line-height: 0;
			opacity: 1;
		}

		&[data-enabled-text]::after {
			content: '\A\00a0' attr(data-enabled-text);
			display: block;
			line-height: 0;
			opacity: 0;
		}

	}

	// Also custom toggle labels
	&.enabled .toggleLabel {
		&[data-disabled-text]::before {
			opacity: 0;
		}

		&[data-enabled-text]::after {
			opacity: 1;
		}
	}

	input[type=checkbox] {
		display: none;
	}

	span {
		font-size: 11px;
		width: 28px;
		line-height: 20px;
		display: inline-block;
		text-align: center;
	}
}

.moduleToggle {
	display: inline-flex; // removes white space
	vertical-align: middle;
}

.moduleName {
	font: 20px segoe ui, arial, sans-serif;
	margin-right: 10px;
	display: inline-block;
	vertical-align: middle;
}

.moduleKey {
	font-size: .75em;
	color: #999;
}

.optionsTable {
	th {
		font-weight: bold;
		font-size: 14px;
		color: white;
		text-shadow: 1px 1px 1px rgba(0, 0, 0, .3);
		padding: 7px 5px;
		background-color: rgb(150, 191, 232);
	}

	tr:nth-child(even) {
		background-color: hsl(215, 40%, 93%);
	}

	td {
		padding: 5px;
	}

	tr.dragged {
		width: 80% !important;
		background-color: transparent;

		input[type=text] {
			width: auto !important;
		}
	}

	input[type=text] {
		width: 100%;
	}

	textarea,
	ul.token-input-list-facebook {
		width: 100%;
		min-width: 300px;
		box-sizing: border-box;
	}
}

#RESConsoleVersionDisplay {
	display: inline-block;
	font-size: 10px;
	margin-left: 1em;
	vertical-align: middle;
}

.RESConsoleButton {
	padding: 3px 5px;
	font-size: 12px;
	border: 1px solid #636363;
	border-radius: 3px;
	overflow: hidden; // Contain the spinner when executing callback

	+ .RESConsoleButton {
		margin-left: 4px;
	}
}

a.RESConsoleButton {
	display: inline-block;
}

#moduleOptionsSave {
	float: right;
	cursor: pointer;
	padding: 0 10px;
	height: auto;
	margin: -2px 1em 0 0;
	font-size: 12px;
	line-height: 22px;
	color: #fff;
	border: 1px solid #636363;
	border-radius: 3px;
	background-color: rgba(16, 122, 196, .9);

	&:hover {
		background-color: rgb(16, 122, 196);
	}

	&::before {
		content: '';
		display: inline-block;
		margin: 0 7px 0 0;
		height: 8px;
		width: 8px;
		border-radius: 100%;
		background: white;
	}

	&.optionsSaved::before {
		background: #259;
	}

	&::-moz-focus-inner {
		border: none;
		padding: 0;
	}
}

.addRowButton {
	cursor: pointer;
	padding: 2px 5px;
	color: #fff;
	border: 1px solid #636363;
	border-radius: 3px;
	background-color: #107ac4;
}

.addRowButton:hover {
	background-color: #289dee;
}

#moduleOptionsSaveStatus {
	display: none;
	float: right;
	padding: 4px;
	margin-right: 1em;
	background-color: #FFFACD;
}

#AboutRESTeamImage {
	width: 100%;
	background-color: #000;
	margin-bottom: 12px;

	img {
		display: block;
		margin: auto;
	}
}

#SearchRES-results-container {
	display: none;

	+ #SearchRES-boilerplate {
		margin-top: 1em;
		border-top: 1px black solid;
		padding-top: 1em;
	}

	li {
		list-style-type: none;
		border-bottom: 1px dashed #ccc;
		cursor: pointer;
		margin-left: 0;
		padding-left: 10px;
		padding-top: 24px;
		padding-bottom: 24px;

		&:hover {
			background-color: #FAFAFF;
		}
	}
}

#SearchRES-results-hidden {
	display: none;
	font-style: italic;
}

.advanced-options-disabled #SearchRES-results-hidden.advancedResults {
	display: inline;
}

// Universal subreddit toggle button (subscribe, filter, shortcut, etc)
// Borrowed from fancy-toggle-button
%res-fancy-toggle-button {
	font-weight: bold;
	font-size: 10px;
	color: white;
	display: inline-block;
	margin: 0 5px 5px 0;
	padding: 1px 6px;
	border: 1px solid rgb(68, 68, 68);
	background-image: linear-gradient(to bottom, rgb(123, 184, 80), rgb(117, 168, 73));
	border-radius: 3px;
	cursor: pointer;
}

.res-fancy-toggle-button {
	@extend %res-fancy-toggle-button;

	&.remove {
		background-image: linear-gradient(to bottom, rgb(207, 97, 101), rgb(190, 94, 96));
	}
}

span.multi-count {
	@extend %res-fancy-toggle-button;
	background: #FF7500;
	color: white;
}

.SearchRES-result-header {
	margin-bottom: 12px;
	color: #666;
}

.SearchRES-result-title {
	font-weight: bold;

	.advanced & {
		font-style: italic;
	}
}

.SearchRES-result-title,
.SearchRES-breadcrumb {
	display: block;
}

.SearchRES-breadcrumb {
	font-weight: normal;
	color: #888;
}

.SearchRES-result-copybutton {
	float: right;
	opacity: .4;
	padding: 10px;
	width: 26px;
	height: 22px;
	visibility: hidden;
}

#SearchRES-results li:hover .SearchRES-result-copybutton {
	visibility: visible;
}

#SearchRES-results .SearchRES-result-copybutton:hover {
	color: #888;
}

#SearchRES-input-container {
	position: relative;
	margin-bottom: 10px;

	&::after {
		position: absolute;
		right: 0;
		padding: 5px;
		color: rgb(130, 177, 210);
		font: normal 16px/1 'Batch';
		content: '\f094';
	}
}

#SearchRES-input {
	box-sizing: border-box;
	width: 100%;
	font-size: 14px;
	padding: 5px 25px 5px 3px;
	border: 1px solid rgb(171, 204, 227);
	border-radius: 2px;
}

.RESMenuItemButton {
	display: block;
	position: absolute;
	right: 7px;
	top: 7px;
	padding: 2px;
	width: 16px;
	height: 16px;
	line-height: 15px;
	border-radius: 3px;
}

.RESMenuItemButton:hover {
	background-color: #C8DBEC;
}

.outdated {
	float: right;
	font-size: 11px;
	margin-right: 15px;
	margin-top: 5px;
}

.RES-spoiler {
	.RES-spoiler-title {
		font-style: italic;
		text-decoration: dotted underline;
		cursor: help;
	}

	&:not(:hover):not(:active) .RES-spoiler-contents {
		display: none;
	}
}

.guider ol {
	margin: 1em 1em 1em 2em;
}

.guider dl {
	margin-top: .6em;
	margin-bottom: .6em;
}

.guider em {
	font-weight: bolder;
}

#baconBit {
	position: fixed;
	width: 32px;
	height: 32px;
	background-image: url('../images/bacon.png');
	top: -5%;
	left: -5%;
	z-index: $zindex-baconbit;
	transform: rotate(0deg);
	transition: all 2s linear;

	&.makeitrain {
		top: 100%;
		left: 100%;
		transform: rotate(2000deg);
	}
}

.blueButton {
	cursor: pointer;
	padding: 3px 5px;
	font-size: 12px;
	line-height: 15px;
	color: #fff;
	border: 1px solid #636363;
	border-radius: 3px;
	background-color: #107ac4;
}

.redButton {
	cursor: pointer;
	margin-top: 12px;
	padding: 3px 5px;
	font-size: 12px;
	line-height: 15px;
	color: #fff !important;
	border: 1px solid #bc3d1b;
	border-radius: 3px;
	background-color: #ff5757;
}

.RESButton {
	margin: 5px;
	padding: 3px;
	border: 1px solid #999;
	width: 120px;
	cursor: pointer;
	border-radius: 5px;

	&:hover {
		background-color: #DDD;
	}
}

// Stuff added to force specificty
span.RESCharCounter {
	color: gray;
	float: right;
	font-size: 15px;
	// needed to keep the wiki textarea from being pushed down
	margin-bottom: -2px;

	&.tooLong {
		color: red;
	}
}

// Big Editor
body.RESScrollLock {
	height: 100%;
	overflow: hidden;
}

#BigEditor {
	position: fixed;
	z-index: $zindex-big-editor;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background-color: rgba(0, 0, 0, .75);

	> div {
		margin: 1em .5em;
	}

	.RESDialogContents {
		position: absolute !important;
		top: 0;
		bottom: 0;

		.markdownEditor-wrapper {
			display: block;
		}
	}

	.markdownEditor-wrapper {
		display: none; // unused
	}
}

.BELeft,
.BERight {
	position: absolute !important;
	top: 0;
	bottom: 0;
	width: 49%;
	box-sizing: border-box;
	overflow: hidden;
}

.BELeft {
	left: 0;
	margin-right: 0;

	.RESDialogContents {
		left: 0;
		right: 0;
		margin: 0 1em;
		padding-top: 52px;
	}
}

.BERight {
	right: 0;
	margin-left: 0;

	.md {
		max-width: none;
	}

	.RESDialogContents,
	.RESDialogContents.wiki-page-content {
		overflow: auto;
		padding: 12px;
		margin: 4em 1em 1em 0;
		left: 0;
		right: 0;
	}
}

#BigText {
	resize: none;
	width: 100%;
	height: 100%;
}

.BEFoot {
	margin-top: .5em;

	button {
		display: inline-block;
	}

	.errorList {
		margin-left: 1em;
	}
}

.BESideHide {
	display: none;
}

.RESFadeButton {
	pointer-events: auto;
	right: 38px;
	font-family: Webdings;
}

.content .RESBigEditorPop {
	float: right;
	margin-top: 5px;
	margin-left: 5px;
}

#autocomplete_dropdown {
	display: inline-block;
	z-index: $zindex-autocomplete-dropdown;
}

.usertext iframe {
	border: none;
}

.noCtrlF::before {
	content: attr(data-text);
}

.RESLoadingSpinner {
	color: hsl(210, 80%, 50%);
	font-size: inherit; // Determines size of the icon.
	display: inline-block;
	vertical-align: text-bottom;
	width: 1em;
	height: .5em;
	border-bottom: .5em solid;
	border-radius: 50%;
	animation: spin 1000ms 0ms infinite linear;
}

@keyframes spin {
	100% { transform: rotate(360deg); }
}

// Handle multireddit bar on savedComments page
.with-listing-chooser #savedLinksList {
	margin-left: 120px;
}

.listing-chooser-collapsed #savedLinksList {
	margin-left: 8px;
}

#alert_message {
	display: none;
	position: fixed;
	top: 0;
	right: 0;
	left: 0;
	box-sizing: border-box;
	width: 500px;
	max-height: 100%;
	margin: auto;
	padding: 10px;
	color: black;
	text-align: left;
	font-size: 12px;
	border: 1px solid;
	background-color: #EFEFEF;
	overflow: auto;
	z-index: $zindex-alert-message;

	@media (max-width: 520px) {
		width: auto;
		left: 10px;
		right: 10px;
	}

	@media (max-height: 520px) {
		height: auto;
		bottom: 10px;
	}

	input {
		border: 1px solid;
		padding: 6px 9px;
		float: left;
		background-color: #DFDFDF;
		cursor: pointer;
		margin-right: 10px;

		&.button-right {
			float: right;
		}
	}

	> div {
		margin-bottom: 20px;
	}
}

#alert_message_background {
	position: fixed;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
	background-color: rgba(0, 0, 0, .7);
	z-index: $zindex-alert-message - 1;
}

.res-left {
	float: left;
}

.res-right {
	float: right;
}

.res-icon {
	font: normal 16px/1 'Batch';
	display: inline-block;

	&.res-icon-12 { font-size: 12px; }
	&.res-icon-32 { font-size: 32px; }
	&.res-icon-64 { font-size: 64px; }
	&.res-icon-128 { font-size: 128px; }

	&[data-icon]::before {
		content: attr(data-icon);
	}
}

.md .usertext-body img {
	display: inherit;
}

.highlightedAltAccount {
	font-weight: bold;
}

#show_stylesheets:target + label {
	background-color: lightblue;
}

// Edgescroll plugin
.edgescroll {
	left: 0;
	right: 0;
	//background-color: rgba(0, 0, 255, .5);
}

.edgescroll-top {
	top: 0;
}

.edgescroll-bottom {
	bottom: 0;
}

.RESSortPlaceholder::after {
	border: medium dashed grey;
	color: grey;
	content: 'drop here';
	text-align: center;
	border-radius: 3px;
	display: block;
}

.builderItem {
	border: thin solid lightgrey;
	border-radius: 5px;
	background-color: rgba(10, 10, 10, .05);
	padding: .4em .5em;
	margin-top: .5em;
	margin-bottom: .5em;
	line-height: 18px;

	> .builderWrap > .builderControls {
		display: none;
	}

	.builderItemControls {
		display: flex;
		margin-bottom: 5px;

		> .builderCustomOptions {
			margin-left: 10px;
		}

		> .builderControls {
			padding: .3em .2em;
		}

		.res-icon-button {
			font-size: 20px;

			&.handle { font-size: 27px; }
		}
	}

	input[type='checkbox'] {
		vertical-align: text-bottom !important;
	}
}

.builderWrap {
	display: flex;
	align-items: center;
	width: stretch;
	position: relative;
}

.builderBlock {
	width: stretch;
	flex-wrap: wrap;
	white-space: pre-wrap;

	input,
	select {
		font-size: 1em;
	}

	&-error {
		outline: 2px dotted darkred;

		&::before {
			content: 'Error: ' attr(error);
			display: block;
			color: red;
		}
	}
}

.builderControls {
	padding: .2em .1em;
	align-self: flex-start;

	&.res-icon-button {
		font-size: 14px;
	}
}

.builderTrailingControls {
	& { margin-left: auto !important; }
	& ~ & { margin-left: initial !important; }

	.builderBlock[data-type='group'] + & {
		position: absolute; // Avoids the delete button taking vertical space, shriking the recursive block
		right: 0;
	}
}

.builderMulti {
	padding: 3px 0;

	li {
		padding: 3px 0;
		list-style-type: none !important;

		.dragged {
			border: medium dashed grey;
			border-radius: 3px;
			background-color: #f0f3fc;
		}

		&:nth-of-type(2n) {
			background-color: rgba(10, 10, 10, .05);
		}
	}

	&:empty::before {
		border: medium dashed grey;
		border-radius: 3px;
		color: grey;
		content: 'nothing here yet. add something!';
		padding: 5px 10px;
		text-align: center;
		display: block;
	}
}

.addBuilderBlock {
	margin: .4em 0 .4em .4em;
}

.durationField {
	input[type='number'] {
		width: 3em;
	}
}

.checkset {
	display: inline-block;

	input[type='checkbox'] {
		display: none;
	}

	label {
		border: thin grey solid;
		background-color: white;
		padding: 2px 4px;
		cursor: pointer;

		&:first-of-type {
			border-top-left-radius: 6px;
			border-bottom-left-radius: 6px;
		}

		&:last-of-type {
			border-top-right-radius: 6px;
			border-bottom-right-radius: 6px;
		}
	}

	*:checked + label {
		background-color: darkgrey;
		text-decoration: underline;
	}
}

/*!
(cs)spinner.css - http://jh3y.github.io/-cs-spinner
Licensed under the MIT license

Jhey Tompkins (c) 2014.

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
// (cs)spinner base styling
.csspinner {
	position: relative;

	&::before {
		content: '';
		z-index: 1;
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		background-color: #999;
		opacity: .6;
	}

	&::after {
		z-index: 2;
		content: '';
		height: 40px;
		width: 40px;
		position: absolute;
		top: 50%;
		left: 50%;
		margin: -24px 0 0 -24px;
		transition: all .75s ease 0s;
		border-radius: 100%;
		border-top: 4px solid #555;
		animation: fadeIn 2s 1 cubic-bezier(.3, .25, .7, .15), standard .75s infinite linear;
		transform-origin: center;
	}

	// (cs)spinner ringed spinner.
	// a spinner with a static ring and no overlay.
	&.ringed::after {
		border: 4px solid #8BBDD6;
		border-top-color: #0052D6;
		opacity: 1;
	}
}

// (cs)spinner standard rotation animation used for duo, double-up etc.
@keyframes standard {
	from {
		transform: rotate(0deg);
	}

	to {
		transform: rotate(360deg);
	}
}

@keyframes fadeIn {
	from {
		opacity: 0;
	}
}

.RESCenteredLoadIndicator {
	display: flex;
	justify-content: center;
}

#RESStyleSheetTipPane {
	display: none;
	position: relative;
	border: 1px solid #ddd;
	margin-bottom: 10px;
	width: calc(100% - 320px);
}

#RESStyleSheetTipPane-header {
	cursor: pointer;
	font-size: 20px;
	padding: 10px;
	border-bottom: 1px solid #ddd;

	span.details {
		margin-left: 20px;
		font-size: 12px;
		visibility: hidden;
	}

	&.minimized span.details {
		visibility: visible;
	}
}

#RESStyleSheetTipPane-contents {
	display: none; // hide by default
	padding: 10px;

	ul {
		list-style: initial;
		margin: 0 0 0 1em;
	}

	li p {
		margin: .75em 0;
	}
}

.res-step {
	cursor: pointer;
	user-select: none;

	&::after {
		font: normal 18px/16px Batch;
		content: '\F158';
		display: inline-block;
		vertical-align: middle;
		color: #90acff;
		width: 16px;
	}

	&:hover::after {
		color: #6286f4;
	}

	&.res-step-reverse::after {
		transform: scaleX(-1);
	}
}

.res-step-progress {
	font-size: 13px;
	min-width: 60px;
	text-align: center;
}

.tabmenu li.res-tabmenu-button {
	user-select: none;
	display: inline-block;

	a {
		cursor: pointer;

		&[aftercontent]::after {
			content: attr(aftercontent);
		}
	}

	&.selected a:not(:only-child) {
		&:first-child {
			border-right: none;
		}

		&:last-child {
			border-left: none;
		}
	}
}

#beta-help .help-section::after {
	margin: .5em;
	display: block;
	content: 'Since you are using RES with reddit beta, you should also check out /r/RESissues if you experience bugs.';
}

.pinnable-content.pinned .dismiss-pinnable {
	top: 30px !important;
}
